#!/usr/bin/env perl
use strict;
use warnings;

use IO::Prompt::Tiny qw/prompt/;
use YAML::XS qw(LoadFile);
use Web::NewsAPI;

my $items = shift || 40;

my $conf = LoadFile("$0.yml");

my $newsapi = Web::NewsAPI->new(api_key => $conf->{key});

#my @sources = $newsapi->sources( language => 'en' );
#print $_->name, "\n" for @sources;
#__END__

my $term = prompt('Term:');

print "Categories: business entertainment general health science sports technology\n";
my $cat = prompt('Category:');

my $result;

if ( $term ) {
    $result = $newsapi->everything(
        q              => $term,
        language       => 'en',
        pageSize       => $items,
        excludeDomains => 'nytimes.com', # Pay-to-read site
    );
}
else {
    my %args = ( country => 'us', pageSize => $items );
    $args{category} = $cat if $cat;
    $result = $newsapi->top_headlines(%args);
}

my %articles = map { $_->url => { date => $_->publishedAt, title => $_->title } } $result->articles;

my $n = 0;

binmode( STDOUT, ':utf8' );

for my $article ( sort { $articles{$a}->{date} cmp $articles{$b}->{date} } keys %articles ) {
    printf "%d. %s\n\t%s\n", ++$n, $articles{$article}->{title}, $article;
}
