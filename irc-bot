#!/usr/bin/env perl
use strict;
use warnings;

# Sample config (irc-bot.yml):
#
# nick: 'foobot'
# user: 'Your Name Bot'
# channel: '##somechan'
# server: 'chat.host.net:6667'

use Data::Dumper::Compact qw(ddc);
use Mojo::IRC;
use YAML::XS qw(LoadFile);
use Music::Scales qw(get_scale_notes);
use App::MusicTools; # <- Needed for `vov`

# Use my local libraries
use lib map { "$ENV{HOME}/sandbox/$_/lib" } qw(Music-Duration-Partition);
use Music::Duration::Partition;

my $conf = LoadFile("$0.yml");

my $irc = Mojo::IRC->new(
  nick => $conf->{nick},
  user => $conf->{user},
  server => $conf->{server},
  tls => {},
);

$irc->on(irc_join => sub {
  my($self, $message) = @_;
  print "SUCCESS: $message->{params}[0] joined\n";
});

$irc->on(message => sub {
  my($self, $message) = @_;
});

$irc->on(irc_privmsg => sub {
  my($self, $message) = @_;
  if ($message && $message->{params}) {
    if ($message->{params}[1] =~ /^(\w+)[:,]\s*(.*)$/) {
      my $nick = $1;
      my $msg = $2;
      if ($nick eq $conf->{nick}) {
        if ($msg eq 'leave') {
          $irc->write(QUIT => 'oof');
          exit;
        }
        elsif ($msg eq 'source') {
          $irc->write(privmsg => $conf->{channel}, ':My guts are at https://github.com/ology/Miscellaneous/blob/master/irc-bot');
        }
        elsif ($msg =~ /^motif ([\d.]+)$/) {
          my $size = $1;
          my $mdp = Music::Duration::Partition->new(
              size => $size,
              pool => [qw(hn dqn qn den en sn)],
          );
          my $motif = $mdp->motif;
          my @scale = get_scale_notes('C');
          my $phrase = [ map { $scale[int rand @scale] . '.' . $_ } @$motif ];
          $irc->write(privmsg => $conf->{channel}, ':' . "$size beats: " . ddc($phrase, { max_width => 120 }));
        }
        elsif ($msg =~ /^vov (.*)$/) {
            my $vov = qx{ vov $1 };
            $irc->write(privmsg => $conf->{channel}, ':' . join('|', (split /\n/, $vov)));
        }
        else {
          (my $you = $message->{prefix}) =~ s/^(.+?)!.*$/$1/;
          $irc->write(privmsg => $conf->{channel}, qq|:You said, "$msg" $you|);
        }
      }
    }
  }
});

$irc->connect(sub {
  my($irc, $err) = @_;
  return warn $err if $err;
  $irc->write(join => $conf->{channel});
});

Mojo::IOLoop->start;
