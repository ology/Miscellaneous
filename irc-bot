#!/usr/bin/env perl
use strict;
use warnings;

use Data::Dumper::Compact qw(ddc);
use Mojo::IRC;
use DateTime;

use constant NICK => 'somebot';
use constant CHAN => '#somechan';

my $irc = Mojo::IRC->new(
  nick => NICK,
  user => 'Some Name Bot',
  server => 'chat.host.net:6667',
  tls => {},
);

$irc->on(irc_join => sub {
  my($self, $message) = @_;
  print "SUCCESS: $message->{params}[0] joined\n";
});

$irc->on(message => sub {
  my($self, $message) = @_;
});

$irc->on(irc_privmsg => sub {
  my($self, $message) = @_;
  if ($message && $message->{params}) {
    if ($message->{params}[1] =~ /^(\w+)[:,]\s*(.*)$/) {
      my $nick = $1;
      my $msg = $2;
      if ($nick eq NICK) {
        if ($msg eq 'leave') {
          $irc->write(QUIT => 'oof');
        }
        elsif ($msg eq 'source') {
          $irc->write(privmsg => CHAN, ':My guts are at https://github.com/ology/Miscellaneous/blob/master/irc-bot');
        }
        elsif ($msg eq 'now') {
          $irc->write(privmsg => CHAN, ':' . DateTime->now(time_zone => 'local'));
        }
        elsif ($msg =~ /^localtime (\d+)$/) {
          $irc->write(privmsg => CHAN, ':' . scalar(localtime $1));
        }
        else {
          (my $you = $message->{prefix}) =~ s/^(.+?)!.*$/$1/;
          $irc->write(privmsg => CHAN, qq|:You said, "$msg" $you|);
        }
      }
    }
  }
});

$irc->connect(sub {
  my($irc, $err) = @_;
  return warn $err if $err;
  $irc->write(join => CHAN);
});

Mojo::IOLoop->start;
