#!/usr/bin/env perl
use strict;
use warnings;

# <- Leading comments are for documentation only
#
# #===================
# Project: Foo
# #===================
#
# Start date
#   - What was done
#   - Another task
# End date
#
# Thu Jan  7 15:00:00 PST 2021
#   - Yet another task
# Thu Jan  7 15:51:23 PST 2021
#
# ...

use Data::Dumper::Compact 'ddc';
use DateTime::Format::Natural;

my $file = shift || die "Usage: perl $0 /some/work/log.txt\n";

my %projects;
my $project;
my $datetime;

my $parser = DateTime::Format::Natural->new;

open my $fh, '<', $file or die "Can't read $file: $!";

while (my $line = readline($fh)) {
    next if $line =~ /^#/;
    chomp $line;
    next unless $line;
    if ($line =~ /^Project: (.+)$/) {
        $project = $1;
    }
    elsif ($line =~ /^([A-Z].+)$/) {
        my @parts = split /\s+/, $line;
        my $dt = $parser->parse_datetime("$parts[1] $parts[2], $parts[5] $parts[3]");
        if ($datetime) {
            my $minutes = ($dt->epoch - $datetime->epoch) / 60;
            $projects{$project} += $minutes;
            $datetime = '';
        }
        else {
            $datetime = $dt;
        }
    }
}
#warn(__PACKAGE__,' ',__LINE__," MARK: ",ddc(\%projects));

close $fh or die "Can't close $file: $!";

my $i = 0;

for $project (sort keys %projects) {
    $i++;
    printf "%d. %s: %.2f hours\n", $i, $project, $projects{$project} / 60;
}
